{
    "swagger": "2.0",
    "info": {
        "title": "arc-consumer",
        "version": "v1.0.157"
    },
    "host": "192.168.8.245:8082",
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "paths": {
        "/api/data/v1/consumer/health": {
            "get": {
                "tags": [
                    "Micro"
                ],
                "summary": "get service health",
                "operationId": "getHealth",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/Health"
                        }
                    }
                }
            }
        },
        "/api/data/v1/consumer/status": {
            "get": {
                "tags": [
                    "Micro"
                ],
                "summary": "get service status",
                "operationId": "getStatus",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/Status"
                        }
                    }
                }
            }
        },
        "/gossip/demo1": {
            "get": {
                "tags": [
                    "Gossip Cluster"
                ],
                "summary": "test sensorid-cluster redirection capability",
                "operationId": "sensorid-cluster-redirect",
                "parameters": [
                    {
                        "name": "sensorid",
                        "in": "query",
                        "description": "sensorid",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "inside",
                        "in": "query",
                        "description": "inside swarm or not",
                        "required": false,
                        "type": "boolean",
                        "format": "boolean"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/gossip/demon": {
            "get": {
                "tags": [
                    "Gossip Cluster"
                ],
                "summary": "test sensorids-cluster redirection or aggregation capability",
                "operationId": "sensorids-cluster",
                "parameters": [
                    {
                        "name": "sensorids",
                        "in": "query",
                        "description": "sensorids",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/kv": {
            "get": {
                "tags": [
                    "Gossip Cluster"
                ],
                "summary": "get value, only one item if key is set",
                "operationId": "get",
                "parameters": [
                    {
                        "name": "key",
                        "in": "query",
                        "description": "key",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "string",
                            "format": "string"
                        }
                    },
                    "404": {
                        "description": "key is set but does not exist",
                        "schema": {
                            "type": "string",
                            "format": "string"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Gossip Cluster"
                ],
                "summary": "add a key-value pair, if value is not set, kv will use consider is a sensorid-cluster item and use its cluster name as value",
                "operationId": "add",
                "parameters": [
                    {
                        "name": "key",
                        "in": "query",
                        "description": "key",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "value",
                        "in": "query",
                        "description": "value",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "string",
                            "format": "string"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Gossip Cluster"
                ],
                "summary": "delte a key",
                "operationId": "delete",
                "parameters": [
                    {
                        "name": "key",
                        "in": "query",
                        "description": "key",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "string",
                            "format": "string"
                        }
                    }
                }
            }
        },
        "/node": {
            "get": {
                "tags": [
                    "Gossip Cluster"
                ],
                "summary": "get all cluster members",
                "operationId": "getAll",
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Node"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "BasicConfig": {
            "type": "object",
            "properties": {
                "api_port": {
                    "type": "integer",
                    "xml": {
                        "name": "APIPort"
                    },
                    "format": "int32"
                },
                "api_root": {
                    "type": "string",
                    "xml": {
                        "name": "APIRoot"
                    },
                    "format": "string"
                },
                "app_name": {
                    "type": "string",
                    "xml": {
                        "name": "AppName"
                    },
                    "format": "string"
                },
                "app_version": {
                    "type": "string",
                    "xml": {
                        "name": "AppVersion"
                    },
                    "format": "string"
                },
                "body_limit": {
                    "type": "string",
                    "xml": {
                        "name": "APIBodyLimit"
                    },
                    "format": "string"
                },
                "burst": {
                    "type": "integer",
                    "xml": {
                        "name": "APIBurst"
                    },
                    "format": "int32"
                },
                "cpu_count": {
                    "type": "integer",
                    "xml": {
                        "name": "CPUCount"
                    },
                    "format": "int32"
                },
                "expires_in": {
                    "type": "integer",
                    "xml": {
                        "name": "APIExpiresIn"
                    },
                    "format": "int32"
                },
                "inSwarm": {
                    "type": "boolean",
                    "xml": {
                        "name": "InSwarm"
                    },
                    "format": "boolean"
                },
                "instance": {
                    "type": "string",
                    "xml": {
                        "name": "Instance"
                    },
                    "format": "string"
                },
                "is_api_body": {
                    "type": "boolean",
                    "xml": {
                        "name": "IsAPIBody"
                    },
                    "format": "boolean"
                },
                "is_api_rate": {
                    "type": "boolean",
                    "xml": {
                        "name": "IsAPIRate"
                    },
                    "format": "boolean"
                },
                "is_api_timeout": {
                    "type": "boolean",
                    "xml": {
                        "name": "IsAPITimeout"
                    },
                    "format": "boolean"
                },
                "is_dev_mode": {
                    "type": "boolean",
                    "xml": {
                        "name": "IsDevMode"
                    },
                    "format": "boolean"
                },
                "is_dynamic_config": {
                    "type": "boolean",
                    "xml": {
                        "name": "IsDynamicConfig"
                    },
                    "format": "boolean"
                },
                "is_prof": {
                    "type": "boolean",
                    "xml": {
                        "name": "IsProf"
                    },
                    "format": "boolean"
                },
                "machine": {
                    "type": "string",
                    "xml": {
                        "name": "Machine"
                    },
                    "format": "string"
                },
                "node": {
                    "type": "string",
                    "xml": {
                        "name": "Node"
                    },
                    "format": "string"
                },
                "rate": {
                    "type": "number",
                    "xml": {
                        "name": "APIRate"
                    },
                    "format": "double"
                },
                "service": {
                    "type": "string",
                    "xml": {
                        "name": "Service"
                    },
                    "format": "string"
                },
                "timeout": {
                    "type": "integer",
                    "xml": {
                        "name": "APITimeout"
                    },
                    "format": "int32"
                },
                "work_load": {
                    "type": "integer",
                    "xml": {
                        "name": "WorkLoad"
                    },
                    "format": "int32"
                },
                "zone": {
                    "type": "string",
                    "xml": {
                        "name": "Zone"
                    },
                    "format": "string"
                }
            },
            "xml": {
                "name": "BasicConfig"
            }
        },
        "ComponentStatus": {
            "type": "object",
            "properties": {
                "is_ok": {
                    "type": "boolean",
                    "xml": {
                        "name": "IsOK"
                    },
                    "format": "boolean"
                },
                "params": {
                    "type": "object",
                    "xml": {
                        "name": "Params"
                    },
                    "additionalProperties": {
                        "type": "string",
                        "format": "string"
                    }
                }
            },
            "xml": {
                "name": "ComponentStatus"
            }
        },
        "Health": {
            "type": "object",
            "properties": {
                "health": {
                    "type": "boolean",
                    "xml": {
                        "name": "IsHealth"
                    },
                    "format": "boolean"
                }
            },
            "xml": {
                "name": "Health"
            }
        },
        "Node": {
            "type": "object",
            "properties": {
                "Addr": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "xml": {
                        "name": "Addr",
                        "wrapped": true
                    }
                },
                "DCur": {
                    "type": "integer",
                    "xml": {
                        "name": "DCur"
                    },
                    "format": "int32"
                },
                "DMax": {
                    "type": "integer",
                    "xml": {
                        "name": "DMax"
                    },
                    "format": "int32"
                },
                "DMin": {
                    "type": "integer",
                    "xml": {
                        "name": "DMin"
                    },
                    "format": "int32"
                },
                "Meta": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "xml": {
                        "name": "Meta",
                        "wrapped": true
                    }
                },
                "Name": {
                    "type": "string",
                    "xml": {
                        "name": "Name"
                    },
                    "format": "string"
                },
                "PCur": {
                    "type": "integer",
                    "xml": {
                        "name": "PCur"
                    },
                    "format": "int32"
                },
                "PMax": {
                    "type": "integer",
                    "xml": {
                        "name": "PMax"
                    },
                    "format": "int32"
                },
                "PMin": {
                    "type": "integer",
                    "xml": {
                        "name": "PMin"
                    },
                    "format": "int32"
                },
                "Port": {
                    "type": "integer",
                    "xml": {
                        "name": "Port"
                    },
                    "format": "int32"
                },
                "State": {
                    "type": "integer",
                    "xml": {
                        "name": "State"
                    },
                    "format": "int32"
                }
            },
            "xml": {
                "name": "Node"
            }
        },
        "Status": {
            "type": "object",
            "properties": {
                "basic": {
                    "$ref": "#/definitions/BasicConfig"
                },
                "components": {
                    "type": "object",
                    "xml": {
                        "name": "Components"
                    },
                    "additionalProperties": {
                        "$ref": "#/definitions/ComponentStatus"
                    }
                },
                "is_ok": {
                    "type": "boolean",
                    "xml": {
                        "name": "IsOK"
                    },
                    "format": "boolean"
                }
            },
            "xml": {
                "name": "Status"
            }
        }
    },
    "tags": [
        {
            "name": "Micro"
        },
        {
            "name": "Gossip Cluster"
        },
        {
            "name": "Gossip Cluster"
        },
        {
            "name": "Gossip Cluster"
        }
    ]
}